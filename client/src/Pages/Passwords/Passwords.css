Reset and base styles
* {
  box-sizing: border-box;
}

.passwords {
  min-height: 100vh;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  padding: 2rem;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
  text-align: left;
}

/* Remove default hr styling since we don't use it anymore */
.passwords hr {
  display: none;
}

/* Modal overrides */
.react-responsive-modal-modal {
  background: rgba(255, 255, 255, 0.95) !important;
  backdrop-filter: blur(20px) !important;
  border-radius: 24px !important;
  border: 1px solid rgba(255, 255, 255, 0.3) !important;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2) !important;
  padding: 0 !important;
  max-width: 500px !important;
  width: 90% !important;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif !important;
}

/* Modal overlay */
.react-responsive-modal-overlay {
  background: rgba(0, 0, 0, 0.5) !important;
  backdrop-filter: blur(4px) !important;
}

/* Modal close button */
.react-responsive-modal-closeButton {
  background: rgba(239, 68, 68, 0.1) !important;
  border-radius: 50% !important;
  width: 32px !important;
  height: 32px !important;
  top: 1rem !important;
  right: 1rem !important;
  transition: all 0.3s ease !important;
}

.react-responsive-modal-closeButton:hover {
  background: rgba(239, 68, 68, 0.2) !important;
  transform: scale(1.1) !important;
}

.react-responsive-modal-closeButton svg {
  fill: #ef4444 !important;
  width: 16px !important;
  height: 16px !important;
}

/* Modal content styling */
.react-responsive-modal-modal h2 {
  font-size: 1.8rem;
  font-weight: 700;
  color: #2d3748;
  margin: 0 0 2rem 0;
  text-align: center;
  border: none;
  padding: 2rem 2rem 0 2rem;
}

/* Form styling is now handled inline, but keeping base form styles */
.form {
  padding: 0 2rem 2rem 2rem;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.form__inputs {
  display: flex;
  flex-direction: column;
  margin: 0;
}

.form__inputs label {
  display: block;
  font-size: 0.9rem;
  font-weight: 600;
  color: #4a5568;
  margin: 0 0 0.5rem 0;
}

.form__inputs input {
  width: 100%;
  padding: 1rem;
  font-size: 1rem;
  border: 2px solid #e2e8f0;
  border-radius: 12px;
  outline: none;
  transition: all 0.3s ease;
  font-family: inherit;
}

.form__inputs input:focus {
  border-color: #667eea;
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
}

.form button {
  background: linear-gradient(45deg, #667eea, #764ba2);
  color: white;
  border: none;
  border-radius: 12px;
  padding: 1rem 2rem;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 16px rgba(102, 126, 234, 0.3);
  margin-top: 1rem;
  font-family: inherit;
}

.form button:hover {
  transform: translateY(-1px);
  box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
}

/* Search input styling */
.searchInput {
  width: 100%;
  padding: 1.25rem 1.5rem;
  font-size: 1.1rem;
  border: none;
  border-radius: 20px;
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  outline: none;
  transition: all 0.3s ease;
  font-family: inherit;
}

.searchInput:focus {
  background: rgba(255, 255, 255, 1);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
}

.searchInput::placeholder {
  color: #a0aec0;
  font-weight: 500;
}

/* Password list grid layout */
.passwords__list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 1.5rem;
  max-width: 1200px;
  margin: 0 auto;
}

/* Password item styling - these are now mostly handled inline */
.passwordItem {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  padding: 1.5rem;
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  min-height: 180px;
}

.passwordItem:hover {
  transform: translateY(-4px);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
}

/* Welcome message styling */
.name {
  background: linear-gradient(45deg, #ff6b6b, #feca57);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  font-weight: 700;
  text-decoration: none;
  transition: all 0.3s ease;
}

/* No passwords state */
.nopass {
  text-align: center;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border-radius: 24px;
  padding: 4rem 2rem;
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  max-width: 600px;
  margin: 0 auto;
}

.nopass p {
  font-size: 1.2rem;
  color: #4a5568;
  margin-bottom: 2rem;
  font-weight: 500;
}

/* Button base styles */
.modalButton {
  background: linear-gradient(45deg, #667eea, #764ba2);
  color: white;
  border: none;
  border-radius: 16px;
  padding: 1rem 2rem;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 16px rgba(102, 126, 234, 0.3);
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  font-family: inherit;
  text-decoration: none;
}

.modalButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(102, 126, 234, 0.4);
}

/* Responsive design */
@media (max-width: 768px) {
  .passwords {
    padding: 1rem;
  }
  
  .passwords__list {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .react-responsive-modal-modal {
    width: 95% !important;
    margin: 1rem !important;
  }
  
  .modalButton {
    padding: 0.875rem 1.5rem;
    font-size: 0.9rem;
  }
}

@media (max-width: 480px) {
  .passwords {
    padding: 0.5rem;
  }
  
  .passwordItem {
    padding: 1rem;
    min-height: 160px;
  }
  
  .nopass {
    padding: 2rem 1rem;
  }
}

/* Custom scrollbar for better aesthetics */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.3);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.5);
}

/* Animation keyframes for smooth transitions */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.passwordItem {
  animation: fadeIn 0.5s ease-out;
}

/* Focus styles for accessibility */
.modalButton:focus,
.form button:focus {
  outline: 2px solid #667eea;
  outline-offset: 2px;
}

.searchInput:focus {
  outline: 2px solid #667eea;
  outline-offset: 2px;
}
